{"version":3,"sources":["components/PokeInfoModal/stylePokeInfoModal.module.css","components/Search/Search.module.css","components/SelectType/SelectType.module.css","components/Header/Header.module.css","components/Pagination/Pagination.module.css","components/PokeList/stylePokeList.module.css","components/Pagination/Pagination.js","components/PokeInfoModal/PokeInfoModal.js","components/PokeCard/PokeCard.js","components/PokeList/PokeList.js","components/PokePage/PokePage.js","components/Search/Search.js","components/SelectType/SelectType.js","components/Content/Content.js","components/Header/Header.js","App.js","serviceWorker.js","index.js","components/PokeCard/stylePokeCard.module.css"],"names":["module","exports","Paginationn","pokeCount","onShowSizeChange","onChange","className","s","container","defaultCurrent","defaultPageSize","total","showSizeChanger","pageSizeOptions","showTotal","range","PokeInfoModal","pName","pType","TYPE_COLORS","pImg","PokeHeight","PokeAbilities","PokeBaseStats","PokeStatsName","useState","visible","setvisible","width","title","onCancel","footer","style","fontFamily","fontSize","content","imgAndStats","imgDiv","src","height","statsDiv","trailColor","strokeLinecap","type","percent","format","status","display","justifyContent","minWidth","flexDirection","map","psn","margin","pbs","pot","background","color","padding","textAlign","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","unknown","shadow","PokeCard","p","PokeName","PokeUrl","PokeImg","setPokeImg","PokeID","setPokeID","PokeType","setPokeType","setPokeHeight","setPokeBaseStats","setPokeStatsName","setLoading","useEffect","axios","get","then","res","data","id","sprites","front_default","types","pt","name","stats","st","base_stat","stat","pokecard","onClick","render","pUrl","pID","CardHeader","idDiv","nameDiv","typeDiv","key","PokeList","Pokemons","search","grid","filter","includes","filteredName","PokePage","setpokeCount","Url","Type","setPokemons","Loading","cancel","canselToken","CancelToken","c","pokemon","results","count","size","Searchh","setSearch","placeholder","e","target","value","SelectorType","ontypeClick","onclearTypeClick","setType","Defolt","tName","url","Content","page_Size","setpage_Size","page_Number","setpage_Number","TypeUrl","setTypeUrl","setUrl","current","pageSize","pageNumber","borderRadius","border","header","Header","logo","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc8c623f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"stylePokeInfoModal_content__1u9IS\",\"imgAndStats\":\"stylePokeInfoModal_imgAndStats__TFSan\",\"imgDiv\":\"stylePokeInfoModal_imgDiv__WsJAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2L79C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"SelectType_grid__1E_Ag\",\"Defolt\":\"SelectType_Defolt__1rVR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__EheOy\",\"logo\":\"Header_logo__2XF1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__6smvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"stylePokeList_grid__3jAyn\",\"Defolt\":\"stylePokeList_Defolt__12Tzh\"};","import React, {useState} from 'react'\r\nimport s from './Pagination.module.css'\r\nimport { Pagination } from 'antd'\r\n\r\n\r\n\r\nexport const Paginationn = ({pokeCount, onShowSizeChange, onChange}) => {\r\n\r\nreturn (\r\n        <div className={s.container}>\r\n            <Pagination\r\n                defaultCurrent={1}\r\n                defaultPageSize={20}\r\n                total={1050}\r\n                showSizeChanger\r\n                pageSizeOptions={[10,20,50,100]}\r\n                onShowSizeChange={onShowSizeChange}\r\n                onChange={onChange}\r\n                showTotal={(pokeCount, range) => `${range[0]}-${range[1]} of ${pokeCount} Pokemon`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport s from './stylePokeInfoModal.module.css'\r\nimport { Modal, Progress } from 'antd';\r\n\r\n\r\nexport default function PokeInfoModal({ pName, pType, TYPE_COLORS, pImg, PokeAbilities, PokeHeight, PokeBaseStats, PokeStatsName}){\r\n  const [visible, setvisible] = useState(true)\r\n\r\nfunction handleCancel(){\r\n  setvisible(false)\r\n}\r\n    return (\r\n      <>\r\n        <Modal\r\n          width={700}\r\n          title={pName}\r\n          visible={visible}\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n          style={{\r\n            fontFamily:'Ranchers, cursive',\r\n            fontSize:'40px'\r\n          }}\r\n        >\r\n          <div className={s.content}>\r\n            <div className={ s.imgAndStats }>\r\n              <div className={s.imgDiv}>\r\n                <img src={pImg} style={{height:`219px`}}/>\r\n              </div>\r\n              <div className={s.statsDiv}>\r\n                <div>\r\n                  <Progress\r\n                  trailColor='violet'\r\n                  strokeLinecap=\"square\" type=\"dashboard\"\r\n                  percent={PokeHeight*2} format={percent => `${PokeHeight/10} m`}\r\n                  status={\"normal\"}\r\n                  />\r\n                </div>\r\n                <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                  <div style={{minWidth:'90px', display:'flex', flexDirection: 'column',justifyContent:'space-between' }}>\r\n                    {PokeStatsName.map(psn=>(\r\n                      <p style={{fontSize:'13px', margin:'0'}}>\r\n                        {psn}\r\n                      </p>\r\n                    ))\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                  {PokeBaseStats.map(pbs=>(\r\n                  <Progress \r\n                    trailColor='violet'\r\n                    percent={pbs/2} format={percent => `${pbs}`}\r\n                    status={\"normal\"}\r\n                  />\r\n                  ))\r\n                  }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n            {pType.map(pot => (\r\n              <p style={{background: `#${TYPE_COLORS[pot]}`, color: `#fff`, padding:'5px', textAlign:'center', fontSize:'25px', margin:'0'}}>\r\n                {pot}\r\n              </p>\r\n            ))}\r\n            </div> \r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport s from './stylePokeCard.module.css'\r\nimport axios from 'axios'\r\nimport PokeInfoModal from '../PokeInfoModal/PokeInfoModal'\r\nimport { render } from '@testing-library/react'\r\n\r\nconst TYPE_COLORS = {\r\n  bug: 'B1C12E',\r\n  dark: '4F3A2D',\r\n  dragon: '755EDF',\r\n  electric: 'FCBC17',\r\n  fairy: 'F4B1F4',\r\n  fighting: '823551D',\r\n  fire: 'E73B0C',\r\n  flying: 'A3B3F7',\r\n  ghost: '6060B2',\r\n  grass: '74C236',\r\n  ground: 'D3B357',\r\n  ice: 'A3E7FD',\r\n  normal: 'C8C4BC',\r\n  poison: '934594',\r\n  psychic: 'ED4882',\r\n  rock: 'B9A156',\r\n  steel: 'B5B5C3',\r\n\twater: '3295F6',\r\n\tunknown: '00BBCD',\r\n\tshadow: 'B8C0EA'\r\n};\r\n\r\nexport default function PokeCard({p}) {\r\n  \r\n  \r\n  const [PokeName, setPokeName] = useState(p)\r\n  const [PokeUrl, setPokeUrl] = useState('https://pokeapi.co/api/v2/pokemon/'+ PokeName)\r\n  const [PokeImg, setPokeImg] = useState(null)\r\n  const [PokeID, setPokeID] = useState()\r\n  const [PokeType, setPokeType] = useState([])\r\n  const [PokeAbilities, setPokeAbilities] = useState([])\r\n  const [PokeHeight, setPokeHeight] = useState()\r\n  const [PokeBaseStats, setPokeBaseStats] = useState([])\r\n  const [PokeStatsName, setPokeStatsName] = useState([])\r\n  const [Loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    let cancel\r\n    axios.get(PokeUrl)\r\n    .then(\r\n      res=>{\r\n        setLoading(false)\r\n        setPokeID(res.data.id)\r\n        setPokeImg(res.data.sprites.front_default)\r\n        setPokeHeight(res.data.height)\r\n        setPokeType(res.data.types.map(pt => pt.type.name))\r\n        setPokeBaseStats(res.data.stats.map(st=>st.base_stat))\r\n        setPokeStatsName(res.data.stats.map(st=>st.stat.name))\r\n      }\r\n    )\r\n  }, [PokeUrl])\r\n\r\n\r\n  return (\r\n    <div \r\n    style={{\r\n      fontFamily:'Ranchers'\r\n    }}\r\n    className={s.pokecard}\r\n    onClick={\r\n      ()=>{\r\n      render(\r\n        <PokeInfoModal\r\n          TYPE_COLORS={TYPE_COLORS}\r\n          pName={PokeName}\r\n          pUrl={PokeUrl}\r\n          pType={PokeType}\r\n          pID={PokeID}\r\n          pImg={PokeImg}\r\n          PokeAbilities={PokeAbilities}\r\n          PokeHeight={PokeHeight}\r\n          PokeBaseStats={PokeBaseStats}\r\n          PokeStatsName={PokeStatsName}\r\n          />)}}>\r\n              \r\n          <div className={s.CardHeader}>\r\n            <div className={s.idDiv}>\r\n              <p>\r\n                {PokeID}\r\n              </p>\r\n            </div>\r\n            <div className={s.nameDiv}>\r\n              {PokeName}\r\n            </div>\r\n          </div>\r\n            <img src={PokeImg}/>\r\n              {PokeType.map(pot => (\r\n              <div className={s.typeDiv} key={pot}>\r\n                <p style={{color: `#${TYPE_COLORS[pot]}`}}>\r\n                  {pot}\r\n                </p>\r\n              </div>\r\n              ))}\r\n            </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PokeCard from '../PokeCard/PokeCard'\r\nimport s from './stylePokeList.module.css'\r\n\r\nexport const PokeList = ({Pokemons, search}) => {\r\n  return (\r\n    <div className={s.grid}>\r\n      {\r\n      Pokemons.filter(name => name.includes(search)).map(filteredName => (\r\n        <div key={filteredName}>\r\n          <PokeCard key={filteredName} p={filteredName}/>\r\n        </div>\r\n        ))\r\n      }\r\n      {/*\r\n        Pokemons.map(filteredName => (\r\n          <div key={filteredName}>\r\n            <PokeCard key={filteredName} p={filteredName}/>\r\n          </div>\r\n        ))\r\n      */}\r\n    </div>\r\n  )\r\n}\r\n","import { Spin } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect} from 'react'\r\nimport PokeCard from '../PokeCard/PokeCard'\r\nimport { PokeList } from '../PokeList/PokeList'\r\n\r\nexport const PokePage = ({ setpokeCount, Url, search, Type }) => {\r\n\r\n    const [Pokemons, setPokemons] = useState([])\r\n    const [Loading, setLoading] = useState(true)\r\n\r\nuseEffect(() => {\r\n    setLoading(false)\r\n    let cancel\r\n    axios.get(Url, {\r\n    canselToken: new axios.CancelToken( c => cancel = c )})\r\n    .then(\r\n        res=>{\r\n            Type?\r\n            setPokemons(res.data.pokemon.map(p => p.pokemon.name))\r\n            :\r\n            setPokemons(res.data.results.map(p => p.name))\r\n            setpokeCount(res.data.count)\r\n        }\r\n    )\r\n    return () => cancel()\r\n}, [Url])\r\n\r\nif (Loading) return <Spin size=\"large\"/>\r\nreturn (\r\n<div>\r\n    <PokeList \r\n        Pokemons={Pokemons}\r\n        search={search}\r\n    />\r\n</div>\r\n)\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from './Search.module.css'\r\nimport { Input } from 'antd'\r\n\r\n\r\nexport const Searchh = ({ setSearch }) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <Input\r\n                className={s.search}\r\n                placeholder=\"Search Pokemon\"\r\n                onChange={\r\n                    e=>(\r\n                        setSearch(e.target.value)\r\n                    )\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState} from 'react'\r\nimport { Button } from 'antd'\r\nimport s from './SelectType.module.css'\r\nimport axios from 'axios'\r\n\r\nconst TYPE_COLORS = {\r\n    bug: 'B1C12E',\r\n    dark: '4F3A2D',\r\n    dragon: '755EDF',\r\n    electric: 'FCBC17',\r\n    fairy: 'F4B1F4',\r\n    fighting: '823551D',\r\n    fire: 'E73B0C',\r\n    flying: 'A3B3F7',\r\n    ghost: '6060B2',\r\n    grass: '74C236',\r\n    ground: 'D3B357',\r\n    ice: 'A3E7FD',\r\n    normal: 'C8C4BC',\r\n    poison: '934594',\r\n    psychic: 'ED4882',\r\n    rock: 'B9A156',\r\n    steel: 'B5B5C3',\r\n    water: '3295F6',\r\n    unknown: '00BBCD',\r\n    shadow: 'B8C0EA'\r\n};\r\n\r\nexport const SelectorType = ({ ontypeClick, onclearTypeClick }) => {\r\n\tconst allTyprURL='https://pokeapi.co/api/v2/type'\r\n\tconst [Type, setType] = useState([])\r\n\t\r\n\tuseEffect(() => {\r\n\t\taxios.get(allTyprURL)\r\n\t\t.then(\r\n\t\t\tres=>{\r\n\t\t\t\tsetType(res.data.results)\r\n\t\t\t}\r\n\t\t)\r\n\t}, [allTyprURL])\r\n\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\tclassName={s.Defolt}\r\n\t\t\t\tonClick={()=>(\r\n\t\t\t\t\tonclearTypeClick()\r\n\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</Button>\r\n\t\t\t\t{\r\n\t\t\t\t\tType.map(tName=>(\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={s.Defolt}\r\n\t\t\t\t\t\tstyle={{background: `#${TYPE_COLORS[tName.name]}`}}\r\n\t\t\t\t\t\tonClick={()=>(\r\n\t\t\t\t\t\t\tontypeClick(tName.url)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tName.name}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n","import { BackTop, Collapse } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Paginationn } from '../Pagination/Pagination'\r\nimport { PokePage } from '../PokePage/PokePage'\r\nimport { Searchh } from '../Search/Search'\r\nimport { SelectorType } from '../SelectType/SelectType'\r\n\r\nexport const Content = () => {\r\n\r\n    const [pokeCount, setpokeCount] = useState()\r\n    const [page_Size, setpage_Size] = useState(20)\r\n    const [page_Number, setpage_Number] = useState(0)\r\n    const [search, setSearch] = useState('')\r\n    const [Type, setType] = useState(false)\r\n    const [TypeUrl, setTypeUrl] = useState('')\r\n    const [Url, setUrl] = useState(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size}&offset=${page_Number}`)\r\n\r\n    useEffect(() => {\r\n        Type?\r\n        setUrl(TypeUrl):search===''?\r\n        setUrl(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size}&offset=${page_Number}`):\r\n        setUrl('https://pokeapi.co/api/v2/pokemon?limit=1050&offset=0')\r\n    });\r\n\r\nfunction onShowSizeChange(current, pageSize) {\r\n    setpage_Size(pageSize)\r\n}\r\nfunction onChange(pageNumber) {\r\n    setpage_Number(pageNumber === 1 ? 0 :pageNumber*page_Size)\r\n}\r\nfunction ontypeClick(value){\r\n    setType(true)\r\n    setTypeUrl(value)\r\n}\r\nfunction onclearTypeClick(){\r\n    setType(false)\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Searchh\r\n            setSearch={setSearch}\r\n            />\r\n            \r\n            <Collapse ghost style={{ borderRadius:'20px',border:'2px solid violet'}}>\r\n                <CollapsePanel\r\n                header=\"Select Poke Type\"\r\n                key=\"1\"\r\n                >\r\n                    <SelectorType\r\n                    ontypeClick={ontypeClick}\r\n                    onclearTypeClick={onclearTypeClick}\r\n                    />\r\n                </CollapsePanel>\r\n            </Collapse>\r\n            {Type?null:\r\n                <Paginationn\r\n                    pokeCount={pokeCount}\r\n                    onChange={onChange}\r\n                    onShowSizeChange={onShowSizeChange}\r\n                />\r\n            }\r\n            \r\n            <PokePage\r\n            setpokeCount={setpokeCount}\r\n            page_Size={page_Size}\r\n            page_Number={page_Number}\r\n            Url={Url}\r\n            Type={Type}\r\n            search={search}\r\n            />\r\n            {Type?null:\r\n                <Paginationn\r\n                    pokeCount={pokeCount}\r\n                    onChange={onChange}\r\n                    onShowSizeChange={onShowSizeChange}\r\n                />\r\n            }\r\n            <BackTop>\r\n                <p>Up</p>\r\n            </BackTop>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <h1 className={s.logo}>PokeDex</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport { Content } from './components/Content/Content';\nimport { Header } from './components/Header/Header';\n\nfunction App() {\n  return (\n    \n    <>\n      <Header/>\n      <Content/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokecard\":\"stylePokeCard_pokecard__3n3OW\",\"idDiv\":\"stylePokeCard_idDiv__3rY59\",\"CardHeader\":\"stylePokeCard_CardHeader__1EZc2\",\"nameDiv\":\"stylePokeCard_nameDiv__2k9lD\",\"typeDiv\":\"stylePokeCard_typeDiv__21YLc\"};"],"sourceRoot":""}