{"version":3,"sources":["components/Search/Search.module.css","components/Header/Header.module.css","components/Pagination/Pagination.module.css","components/PokeList/stylePokeList.module.css","components/Pagination/Pagination.js","components/PokePage/PokePage.js","components/Search/Search.js","components/Content/Content.js","components/Header/Header.js","App.js","serviceWorker.js","index.js","components/PokeCard/stylePokeCard.module.css","components/PokeInfoModal/stylePokeInfoModal.module.css"],"names":["module","exports","Paginationn","pokeCount","onShowSizeChange","onChange","className","s","container","defaultCurrent","defaultPageSize","total","showSizeChanger","pageSizeOptions","showTotal","range","PokePage","setpokeCount","Url","useState","setPokemons","setLoading","useEffect","cancel","axios","get","canselToken","CancelToken","c","then","res","data","count","results","map","p","name","Search","Input","Searchh","search","placeholder","onSearch","value","console","log","Content","page_Size","setpage_Size","page_Number","setpage_Number","fPoke","setfPoke","setUrl","current","pageSize","pageNumber","Header","header","logo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f66e404.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2L79C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__EheOy\",\"logo\":\"Header_logo__2XF1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__6smvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"stylePokeList_grid__3jAyn\",\"Defolt\":\"stylePokeList_Defolt__12Tzh\"};","import React, {useState} from 'react'\r\nimport s from './Pagination.module.css'\r\nimport { Pagination } from 'antd'\r\n\r\n\r\n\r\nexport const Paginationn = ({pokeCount, onShowSizeChange, onChange}) => {\r\n\r\n\r\n    return (\r\n        \r\n        <div className={s.container}>\r\n            <Pagination\r\n                defaultCurrent={1}\r\n                defaultPageSize={20}\r\n                total={1050}\r\n                showSizeChanger\r\n                pageSizeOptions={[10,20,50,100]}\r\n                onShowSizeChange={onShowSizeChange}\r\n                onChange={onChange}\r\n                showTotal={(pokeCount, range) => `${range[0]}-${range[1]} of ${pokeCount} Pokemon`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect} from 'react'\r\nimport PokeCard from '../PokeCard/PokeCard'\r\nimport { PokeList } from '../PokeList/PokeList'\r\n\r\nexport const PokePage = ({ setpokeCount, Url }) => {\r\n\r\n    //const [Url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/')\r\n    const [Pokemons, setPokemons] = useState([])\r\n    const [Loading, setLoading] = useState(true)\r\n\r\nuseEffect(() => {\r\n    //setUrl(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size}&offset=${page_Number}`)\r\n    setLoading(true)\r\n    let cancel\r\n    axios.get(Url, {\r\n    canselToken: new axios.CancelToken( c => cancel = c )})\r\n    .then(\r\n        res=>{\r\n            setpokeCount(res.data.count)\r\n            setPokemons(res.data.results.map(p => p.name))\r\n            \r\n        /*setLoading(false)\r\n        setNextPageUrl(res.data.next)\r\n            setPrevPageUrl(res.data.previous)\r\n        TypeFiltre?\r\n        setPokemons(res.data.results.map(p => p.name))\r\n        :setPokemons(res.data.pokemon.map(p => p.pokemon.name))*/\r\n        }\r\n    )\r\n    return () => cancel()\r\n}, [Url])\r\n\r\n\r\nreturn (\r\n//        console.log(props.pokeCount),\r\n<div>\r\n    <PokeList \r\n        Pokemons={Pokemons}\r\n      //search={search}\r\n    />\r\n</div>\r\n)\r\n}\r\n","import React from 'react'\r\nimport s from './Search.module.css'\r\nimport { Input } from 'antd'\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nexport const Searchh = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <Search\r\n                className={s.search}\r\n                placeholder=\"input search text\"\r\n                onSearch={value => console.log(value)}\r\n                onChange={value => console.log(value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { BackTop } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Paginationn } from '../Pagination/Pagination'\r\nimport { PokePage } from '../PokePage/PokePage'\r\nimport { Searchh } from '../Search/Search'\r\n\r\nexport const Content = () => {\r\n\r\n    const [pokeCount, setpokeCount] = useState()\r\n    const [page_Size, setpage_Size] = useState(20)\r\n    const [page_Number, setpage_Number] = useState(0)\r\n    const [NextPage, setNextPage] = useState('')\r\n    const [PrevPege, setPrevPege] = useState('initialState')\r\n    const [fPoke, setfPoke] = useState(0)\r\n    const [Url, setUrl] = useState(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size}&offset=${page_Number}`)\r\n\r\n    useEffect(() => {\r\n        setUrl(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size}&offset=${fPoke}`)\r\n    });\r\n\r\n\r\nfunction onShowSizeChange(current, pageSize) {\r\n    setpage_Size(pageSize)\r\n    setpage_Number(current)\r\n    console.log(current, pageSize)\r\n    console.log(page_Size)\r\n    //setUrl(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size-1}&offset=${page_Number}`)\r\n}\r\nfunction onChange(pageNumber) {\r\n    console.log('Page: ', pageNumber)\r\n    setfPoke(pageNumber*page_Size)\r\n    console.log('ofset: ', fPoke)\r\n    //setUrl(`https://pokeapi.co/api/v2/pokemon?limit=${page_Size-1}&offset=${page_Number}`)\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Searchh/>\r\n            <Paginationn\r\n            pokeCount={pokeCount}\r\n            onChange={onChange}\r\n            onShowSizeChange={onShowSizeChange}\r\n            />\r\n            <PokePage\r\n            setpokeCount={setpokeCount}\r\n            page_Size={page_Size}\r\n            page_Number={page_Number}\r\n            Url={Url}\r\n            />\r\n            <Paginationn\r\n            pokeCount={pokeCount}\r\n            onChange={onChange}\r\n            onShowSizeChange={onShowSizeChange}\r\n            />\r\n            <BackTop>\r\n                {/*<UpCircleOutlined style={{fontSize:'45px',color:'violet'}}/>*/}\r\n                <p>Up</p>\r\n            </BackTop>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <h1 className={s.logo}>PokeDex</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport { Content } from './components/Content/Content';\nimport { Header } from './components/Header/Header';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Content/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokecard\":\"stylePokeCard_pokecard__3n3OW\",\"idDiv\":\"stylePokeCard_idDiv__3rY59\",\"CardHeader\":\"stylePokeCard_CardHeader__1EZc2\",\"nameDiv\":\"stylePokeCard_nameDiv__2k9lD\",\"typeDiv\":\"stylePokeCard_typeDiv__21YLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"stylePokeInfoModal_content__1u9IS\",\"imgAndStats\":\"stylePokeInfoModal_imgAndStats__TFSan\",\"imgDiv\":\"stylePokeInfoModal_imgDiv__WsJAp\"};"],"sourceRoot":""}